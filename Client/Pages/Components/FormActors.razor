<div class="container">
    <div class="jumbotron">
        <EditForm Model = "Actor" OnValidSubmit="OnValidSubmit">
            <DataAnnotationsValidator></DataAnnotationsValidator>
            <div class="mb-3">
                <InputText class="form-control" @bind-Value="@Actor.ActorName" placeholder="Actor"></InputText>
                <ValidationMessage For="@(()=>Actor.ActorName)"></ValidationMessage>
            </div>
            <div class="form-group row mb-3">
                <div class="col-sm-8">
                    <InputDate class="form-control" @bind-Value="@Actor.BirthDate"></InputDate>
                    <ValidationMessage For="@(()=>Actor.BirthDate)"></ValidationMessage>
                </div>                
            </div>
            <div class="col-mb-3">
                <InputTextArea class="form-control" @bind-Value="@Actor.Bio" placeholder="Biografia"></InputTextArea>
                <ValidationMessage For="@(()=>Actor.Bio)"></ValidationMessage>
            </div>
            <div class="form-group">
                <ImgComponent Label="photo" ImageSelected="ImageSelected" ImgURL="@imgURL"></ImgComponent>
            </div>
            <div class="form-group"></div>
            <button class="btn btn-success">Guardar</button>
        </EditForm>
    </div>
</div>

@code {
    string imgURL;
    [Parameter] public Actor Actor {get;set;}
    [Parameter] public EventCallback OnValidSubmit {get;set;}

    protected override void OnInitialized()
    {
        if (!string.IsNullOrEmpty(Actor.ActorImg))
        {
            imgURL = Actor.ActorImg;
            Actor.ActorImg = null;
        }
    }

    private void ImageSelected(string imageB64)
    {
        Actor.ActorImg = imageB64;
        imgURL = null;
    }
}